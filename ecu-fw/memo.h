/*
 * MIT License
 *
 * Copyright (c) 2019 LandF Corporation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/*

LFT-RX63N-ECU F/W仕様書

CANポートの取り扱いは全て同じとする
CAN3に届いたメッセージは無条件にCAN0、CAN1、CAN2へ転送する

CANメッセージの送信ルール

メッセージ種別
１）イベントメッセージ（データフレーム）
２）サイクルタイムメッセージ（データフレーム）
３）サイクルタイムメッセージ（リモートレーム）
４）転送メッセージ（データフレーム）
５）転送メッセージ（リモートレーム）

送信メッセージバッファ
１）MBOX1用（ID:000〜1FF）優先度：高
２）MBOX2用（ID:200〜3FF）優先度：中
３）MBOX3用（ID:400〜7FF）優先度：低


イベントメッセージはイベント発生時にIDが示す優先順位に従いイベントバッファへ積む。
イベントバッファは優先度に従いチェーン接続され、より優先度の高いメッセージを先頭に置く。
ID優先度毎に定められた遅延時間に対し、同時発生イベントは優先度順に1msごと加算する。

	同時発生イベント数が3の場合
				  ID    Delay  Time  Next  Repeat
				+-----+-------+-----+-----+-------+
	優先度高	| 000 |  +0ms |   0 | 100 | False |
		↑		+-----+-------+-----+-----+-------+
		｜		| 100 |  +1ms |   0 | 7FF | False |
		↓		+-----+-------+-----+-----+-------+
	優先度低	| 7FF |  +2ms |   0 |  -1 | False |
				+-----+-------+-----+-----+-------+

	遅延時間は、イベント転送時に更新される（毎ms時に最優先メッセージが送出対象となる）。

	新規イベントが割り込んだ場合
				  ID    Delay  Time  Next  Repeat
				+-----+-------+-----+-----+-------+
	優先度高	| 000 |  +0ms |   1 | 080 | False |	←チェーン変更
		↑		+-----+-------+-----+-----+-------+
		｜		| 080 |  +0ms |   0 | 100 | False |	←イベント挿入
		｜		+-----+-------+-----+-----+-------+
		｜		| 100 |  +1ms |   1 | 7FF | False |
		↓		+-----+-------+-----+-----+-------+
	優先度低	| 7FF |  +2ms |   1 |  -1 | False |
				+-----+-------+-----+-----+-------+

	優先度に従い、送出順序が変更になる。
	イベントチェーンへの接続は割り込む位置の前側イベントのNEXT変数へ割り込むイベントのポインタに書き換え、
	もともとのポインタを新規イベントのNEXTに記載する事で割り込みを成立させる

サイクルタイムメッセージはIDの持つサイクルタイムに従い送出するバッファ。
1ms毎にタイマが進行し、設定値に達すると送信バッファチェーンへ接続される。
サイクルタイムバッファはIDの優先度に従った順序で並んでおり、必ず高優先度から処理する。

				  ID    Cycle  Time  Next  Repeat
				+-----+-------+-----+-----+-------+
	優先度高	| 001 |  10ms |   9 | 020 | True  |
		↑		+-----+-------+-----+-----+-------+
		｜		| 020 |  15ms |  14 | 200 | True  |
		｜		+-----+-------+-----+-----+-------+
		｜		| 200 | 100ms |  99 | 7FE | True  |
		↓		+-----+-------+-----+-----+-------+
	優先度低	| 7FE |  50ms |  49 |  -1 | True  |
				+-----+-------+-----+-----+-------+

	同時にタイムアップした場合はIDの優先度順に送信バッファへ積まれる。
	コリジョン多発で送信失敗となってもバッファに空きがあれば積む。

タイムアップ待ち行列
イベントメッセージとサイクルタイムメッセージは、共に同じタイムアップ待ちチェーンに接続される。
チェーンは優先順位に従って接続され、同時タイムアップでも送信チェーンに積み上げられる順序は守られる。

	タイムアップ待ちチェーンは上記2種を合成した状態となる
	
				  ID   UpValue Time  Next  Repeat
				+-----+-------+-----+-----+-------+
	優先度高	| 000 |  +0ms |   1 | 001 | False |
		↑		+-----+-------+-----+-----+-------+
		｜		| 001 |  10ms |   9 | 020 | True  |
		｜		+-----+-------+-----+-----+-------+
		｜		| 020 |  15ms |  14 | 080 | True  |
		｜		+-----+-------+-----+-----+-------+
		｜		| 080 |  +0ms |   0 | 100 | False |	←イベント挿入
		｜		+-----+-------+-----+-----+-------+
		｜		| 100 |  +1ms |   1 | 200 | False |
		｜		+-----+-------+-----+-----+-------+
		｜		| 200 | 100ms |  99 | 7FE | True  |
		｜		+-----+-------+-----+-----+-------+
		｜		| 7FE |  50ms |  49 | 7FF | True  |
		↓		+-----+-------+-----+-----+-------+
	優先度低	| 7FF |  +2ms |   1 |  -1 | False |
				+-----+-------+-----+-----+-------+


送信バッファはチェーン接続された送信待ち行列で、優先順位に従い順次送信する。
次送信メッセージがNULLの時は何もしない。
送信メッセージはチェーンなので、優先度の高いIDを割り込ませる事が可能。
構造はタイムアップ待ちチェーンより単純である。
対応する送信メールボックスが送信可能な時に転送する。

	送信バッファチェーン

				  ID    Next
				+-----+-----+
	優先度高	| 000 | 001 |	→送信メールボックス0に転送、送信要求発行
		↑		+-----+-----+
		｜		| 001 | 200 |	→送信メールボックス0が使用中の時、待たされる
		｜		+-----+-----+
		｜		| 200 | 7FF |	→送信メールボックス1に転送、送信要求発行
		↓		+-----+-----+
	優先度低	| 7FF |  -1 |	→送信メールボックス2に転送、送信要求発行
				+-----+-----+

	ID=000が送信され、200と7FFは待ち状態に。
	000送信完了後に001を送信準備するまでの期間で200が送信開始すると001は待ち状態となる。
	001が送信されると7FFが送信される。

			     _________ _______________
	MBOX0	____/__000____X__001__________X____________
			     _________________ 
	MBOX1	____/__200____________X____________________
			     _________________________________
	MBOX2	____/__7FF____________________________X____
			      _______ _______ _______ _______
	CAN		_____/__000__X__200__X__001__X__7FF__X_____
			   ↑
			   同時4メッセージ


ID対応ビットデータバッファ構造
ID＝000〜7FFに対し、8byte（64bit）のメモリを配置(16,384byte : 0〜3FFF)

	アドレス算出式
	Addr = ID * 8


イベント定義テーブル
データ更新時、IDのバイト・ビット位置に対するイベント処理の有無を示すテーブル
ID毎に1byteの情報を持ち、1〜255はイベント有効の遅延時間(ms)を示す。
0の場合はイベント処理無しとなる。
デフォルト値

	ID範囲		遅延(ms)
	000〜0FF		1
	100〜1FF		10
	200〜2FF		20
	300〜3FF		30
	400〜4FF		40
	500〜5FF		50
	600〜6FF		60
	700〜7FF		70

	イベント定義テーブルはCAN以外のI/Fより更新された場合に限り参照される。


セントラルゲートウェイ機能(CGW)
４つあるCANポートを相互に接続する機能がCGWである。
受信したCANポートへのエコーバックは行わない。
転送時にはルーティングマップを参照し、対象となるポートのみに転送を行う。

	CANポート	適用
		0		パワトレ
		1		ボディー
		2		シャシー
		3		OBD2

	CAN0が受信した電文をCAN1,CAN2,CAN3へ転送する。
	転送時は送信バッファへ積まれるため、IDによる優先順位が適用される。

ルーティングマップは全てのECUが持ち、受信ID制限と送信チャンネルを定義する。
転送先が無いIDは自局バッファにコピーするのみ。
通常、パワトレ・ボディー・シャシーは転送定義が無い。
CGWはデフォルトで全ての受信電文を全チャンネルへ転送する。

	ルーティングテーブルの定義
	
	ID毎に1byteを要し、ビットに転送チャンネルが指定される。
	+------+----+----+----+----+----+----+----+----+
	| bit  | ７ | ６ | ５ | ４ | ３ | ２ | １ | ０ |
	+------+----+----+----+----+----+----+----+----+
	| CAN0 | − | − | − | ● | − | − | − | 〇 |
	+------+----+----+----+----+----+----+----+----+
	| CAN1 | − | − | ● | − | − | − | 〇 | − |
	+------+----+----+----+----+----+----+----+----+
	| CAN2 | − | ● | − | − | − | 〇 | − | − |
	+------+----+----+----+----+----+----+----+----+
	| CAN3 | ● | − | − | − | 〇 | − | − | − |
	+------+----+----+----+----+----+----+----+----+
	〇通常モード転送先
	●リプロモード転送先
	
	各ECUは通常モードとリプロモードを備え、リプロ専用IDによりデータ転送を受け入れる。
	リプロはECU毎に異なるIDを使用するため、全ECUに対し自分活動時更新が可能である。


ECU設定情報定義E2データマップ

	メモリ容量32KB（0000〜7FFF）
	+-----------------------+-----------+-----------+-----------+
	|		用途			|  Address	|	範囲	|	サイズ	|
	+-----------------------+-----------+-----------+-----------+
	| ルーティングマップ    | 00000000  | 000007FF  | 00000800  |	2048個
	+-----------------------+-----------+-----------+-----------+
	| 周期・イベント定義    | 00000800  | 00000FFF  | 00000800  |	256個
	+-----------------------+-----------+-----------+-----------+


RAM上の配分

	メモリ容量256KB（00000000〜0003FFFF）
	+-----------------------+-----------+-----------+-----------+
	|		用途			|  Address	|	範囲	|	サイズ	|
	+-----------------------+-----------+-----------+-----------+
	| ルーティングマップ    | 00000000  | 000007FF  | 00000800  |	2048個
	+-----------------------+-----------+-----------+-----------+
	| 周期・イベント定義    | 00000800  | 00000FFF  | 00000800  |	256個
	+-----------------------+-----------+-----------+-----------+
	| CANフレームデータ     | 00001000  | 00004FFF  | 00004000  |	2048id×8byte×8bit
	+-----------------------+-----------+-----------+-----------+
	| CAN送信待ちバッファ   | 00005000  | 00006FFF  | 00002000  |	256×4ch
	+-----------------------+-----------+-----------+-----------+
	| システム              | 00007000  | 0002FFFF  |           |	
	+-----------------------+-----------+-----------+-----------+
	| ベクタ・スタック・DTC | 00030000  | 0003FFFF  | 00010000  |	65536byte
	+-----------------------+-----------+-----------+-----------+





*/

